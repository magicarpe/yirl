#!/bin/bash

source configure-helper.sh

add_toolchain mingw-i686
function mingw-i686 {
    #export CC=x86_64-w64-mingw32-cc
    #export PKG_CONFIG=x86_64-w64-mingw32-pkg-config
    export TCC_LIB_NAME="libtcc.a"
    export WITH_CURSES=0
    #export LDFLAGS_EXT="-lntoskrnl"
    export LIBEXTENSION=dll
    #export AR="x86_64-w64-mingw32-ar"
    export IS_UNIX=0
    export YIRL_LINKING=build-static-lib
    var_add BIN_EXT .exe
}

add_toolchain ubuntu
function ubuntu {
    export LUA_LIB="`pkg-config --libs lua51`"
    export LUA_CFLAGS="`pkg-config --cflags lua51`"
}

parse_args $@


var_add AR ar
var_add PKG_CONFIG pkg-config
var_add SCRIPT_DIR "core/script"
var_add UTIL_DIR "core/util"
var_add WID_DIR "core/widget"
var_add ENTITY_DIR "core/entity"
var_add GAME_DIR "core/game"
var_add SDL_WID_DIR "$WID_DIR/sdl2"
var_add CURSES_DIR "$WID_DIR/curses"
var_add TESTS_DIR "tests/"
var_add DESCRIPTION_DIR "core/description"
var_add BYTECODE_DIR "core/ybytecode"
var_add GEN_LOADER_DIR "core/generic-loader"
var_add LIBEXTENSION so
var_add LDFLAGS_EXT ""
var_add YIRL_LINKING build-dynamic-lib

define_add WITH_SOUND 1
if [ $WITH_SOUND -ne 0 ]; then
    SOUND_DIR="core/sound"
    var_add SOUND_SRC "\"$SOUND_DIR/sdl.c $SOUND_DIR/sound.c\""
    #var_add SOUND_SRC "\"$SOUND_DIR/sound-libvlc.c $SOUND_DIR/sound.c\""
    #var_add VLC_LIB "\"`pkg-config --libs libvlc`\""
    define_add defaultSoundDriver sdlDriver
else
    var_add SOUND_SRC "$SOUND_DIR/sound.c"
    var_add VLC_LIB ""
    define_add defaultSoundDriver noSound
fi

var_add IS_UNIX 1
if [ $IS_UNIX -eq 1 ]; then
    var_append LDFLAGS_EXT "-ldl"
fi

var_add LUA_LIB "\"`pkg-config --libs lua`\""
var_add LUA_CFLAGS "\"`pkg-config --cflags lua`\""

define_add WITH_SDL 1
define_add WITH_CURSES 1
if [ $WITH_CURSES -ne 0 ]; then
    var_add CURSES_LIB "-lcurses"
    var_add CURSES_SRC "\"$CURSES_DIR/curses.c $CURSES_DIR/text-screen.c $CURSES_DIR/menu.c $CURSES_DIR/map.c\""
    
fi

str_define_add YIRL_MODULES_PATH "modules/"

var_add YIRL_INCLUDE_PATH2 $PWD/include/
var_add YIRL_INCLUDE_PATH $YIRL_INCLUDE_PATH2/yirl/

var_add TCC_LIB_PATH $PWD/tinycc/
var_add TCC_LIB_NAME libtcc.a
